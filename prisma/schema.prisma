// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum JournalType {
    GRATITUDE
    EVENT
    IDEA
    LEARNING
}

enum Priority {
    TOP
    HIGH
    MEDIUM
    LOW
    MAYBE
}

enum Status {
    NEW
    PENDING
    PROGRESSING
    COMPLETED
    BLOCKED
    PARKED
}

model User {
    id       String @id @unique @default(uuid())
    email    String @unique
    name     String
    password String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Tag {
    id          String   @id @unique @default(uuid())
    name        String
    description String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model TimeSlot {
    id    String   @id @unique @default(uuid())
    start DateTime
    end   DateTime
}

model Journal {
    id          String   @id @unique @default(uuid())
    name        String
    description String?
    tagIDs      String[]
    userId      String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    journalType JournalType @default(IDEA)
}

model Task {
    id          String   @id @unique @default(uuid())
    name        String
    description String?
    tagIDs      String[]
    userId      String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    deadline       DateTime?
    priority       Priority  @default(LOW)
    status         Status    @default(NEW)
    predictedHours Float?
    goalId         String?
    habitId        String?
    timeSlotId     String?
}

// merged goal and project
model Goal {
    id          String   @id @unique @default(uuid())
    name        String
    description String?
    tagIDs      String[]
    userId      String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    why       String?
    relevance String?
}

model Habit {
    id          String   @id @unique @default(uuid())
    name        String
    description String?
    tagIDs      String[]
    userId      String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    startDate   DateTime @default(now())
    trackRecord String?  @default("")
}
